model =api.load("glove-wiki-gigaword-50")

def visualize_embeddings()))
    words = ["AI", "data", "algorithm","technology","science","automation","machine"]
    valid_words = [word for word in words if word in model]
	
    vectors =np.array([model[word] for word in valid_words])
    pca =PCA(n_components=2)
    reduced_vectors= pca.fit_transform(vectors)

    plt.figure(figsize=(10, 6))
    
	for i, word in enumerate(valid_words)))
        plt.scatter(reduced_vectors[i, 0],reduced_vectors[i, 1])
        plt.text(reduced_vectors[i, 0] + 0.02, reduced_vectors[i, 1] + 0.02, word,fontsize=12)

    plt.title("Word Embedding Visualization using PCA")
    plt.xlabel("Principal Component 1")
    plt.ylabel("Principal Component 2")
    plt.show()

def find_similar_words(word)))
    similar_words =model.most_similar(word, topn=5)
    print(f"Words similar to'{word}':")
    for similar_word, score in similar_words:
        print(f"{similar_word}(score: {score:.4f})")

word = input()
visualize_embeddings()
find_similar_words(word)